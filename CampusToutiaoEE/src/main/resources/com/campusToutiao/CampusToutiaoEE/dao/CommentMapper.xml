<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.campusToutiao.CampusToutiaoEE.dao.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.campusToutiao.CampusToutiaoEE.entity.Comment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="article_id" property="articleId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="like_count" property="likeCount" jdbcType="INTEGER" />
    <result column="dislike_count" property="dislikeCount" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.campusToutiao.CampusToutiaoEE.entity.Comment" extends="BaseResultMap" >
    <result column="comment_content" property="commentContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, article_id, user_id, like_count, dislike_count, create_date
  </sql>
  <sql id="Blob_Column_List" >
    comment_content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getAllCommentCount" resultType="java.lang.Integer" >
    select count(1)
    from tb_comment
  </select>
  <select id="getCommentListByNewsId" resultMap="ResultMapWithBLOBs" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_comment
    where article_id = #{newsId,jdbcType=INTEGER}
    order by create_date desc
  </select>
  <select id="getTop10ActiveUser" resultType="java.util.HashMap" >
    select count(1) commentCount, user_id userId
    from tb_comment
    group by user_id
    order by count(1) desc
    limit 0, 10
  </select>
  <select id="getCommentList" resultMap="ResultMapWithBLOBs" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_comment
    order by create_date desc
    limit #{pageIndex,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
  </select>
  <select id="getCommentListInDay" resultMap="ResultMapWithBLOBs" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_comment
    where date(create_date) = subdate(curdate(),date_format(curdate(),'%w') + #{week,jdbcType=INTEGER});
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="delCommentByNewsId">
    delete from tb_comment
    where article_id = #{newsId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.campusToutiao.CampusToutiaoEE.entity.Comment" >
    insert into tb_comment (id, article_id, user_id, 
      like_count, dislike_count, create_date, 
      comment_content)
    values (#{id,jdbcType=INTEGER}, #{articleId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{likeCount,jdbcType=INTEGER}, #{dislikeCount,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{commentContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.campusToutiao.CampusToutiaoEE.entity.Comment" >
    insert into tb_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="articleId != null" >
        article_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="likeCount != null" >
        like_count,
      </if>
      <if test="dislikeCount != null" >
        dislike_count,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="commentContent != null" >
        comment_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="articleId != null" >
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null" >
        #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="dislikeCount != null" >
        #{dislikeCount,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="commentContent != null" >
        #{commentContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.campusToutiao.CampusToutiaoEE.entity.Comment" >
    update tb_comment
    <set >
      <if test="articleId != null" >
        article_id = #{articleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null" >
        like_count = #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="dislikeCount != null" >
        dislike_count = #{dislikeCount,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="commentContent != null" >
        comment_content = #{commentContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.campusToutiao.CampusToutiaoEE.entity.Comment" >
    update tb_comment
    set article_id = #{articleId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      like_count = #{likeCount,jdbcType=INTEGER},
      dislike_count = #{dislikeCount,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      comment_content = #{commentContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.campusToutiao.CampusToutiaoEE.entity.Comment" >
    update tb_comment
    set article_id = #{articleId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      like_count = #{likeCount,jdbcType=INTEGER},
      dislike_count = #{dislikeCount,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>